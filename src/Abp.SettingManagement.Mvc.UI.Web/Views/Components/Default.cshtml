@using Abp.SettingManagement.Mvc.UI
@using Abp.SettingManagement.Mvc.UI.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.Settings
@model IEnumerable<Volo.Abp.Settings.SettingDefinition>
@inject SettingProvider SettingProvider
@inject IHtmlLocalizer<AbpSettingManagementMvcUIResource> L

@{
    int index = 0;
}

@foreach (var group in Model.GroupBy(sd => sd.Properties[AbpSettingManagementMvcUIConst.Group2].ToString()))
{
    <abp-card>
        <abp-card-header>
            <h4>@L[group.Key]</h4>
        </abp-card-header>
        <abp-card-body>
            @foreach (var settingDefinition in group)
            {
                var displayName = L["DisplayName:" + settingDefinition.Name];
                var description = L["Description:" + settingDefinition.Name];
                string value = await SettingProvider.GetOrNullAsync(settingDefinition.Name);
                string type = settingDefinition.Properties["Type"].ToString();
                <label for="Setting@(index)">@displayName</label>
                @if (type == "checkbox")
                {
                    string checkedStr = string.Compare(value, "true", StringComparison.OrdinalIgnoreCase) == 0 ? "checked" : "";
                    <div class="checkbox">
                        <input type="checkbox" id="Setting@(index)" value="@value" class="form-check-input" @checkedStr/>
                        <label class="form-check-label" for="Setting@(index)">@description</label>
                    </div>
                }
                else
                {
                    @if (!description.IsResourceNotFound)
                    {
                        <p class="form-text">@description</p>
                    }
                    <input type="@settingDefinition.Properties["Type"]" id="Setting@(index)" value="@value" class="form-control"/>
                }
                index++;
            }
        </abp-card-body>
    </abp-card>
}